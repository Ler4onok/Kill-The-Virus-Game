{"version":3,"sources":["utils/index.js","constants.js","index.js"],"names":["getRandomNumber","min","max","Math","floor","random","createDomElement","tag","attrs","element","document","createElement","attr","children","length","forEach","child","appendChild","MAP_HEIGHT","MAP_WIDTH","RED_ZONE_WIDTH_INTERVAL","VIRUSES_ELIMINATED","VIRUSES_MISSED","initialize","render","mapImage","id","src","map","virus","redZone","score","className","textContent","virussesEliminated","virussesMissed","gameOver","youWonMessage","scoreWrapper","mapWrapper","style","width","root","body","height","interval","displayVirus","addEventListener","e","virusClickHandler","mapClickHandler","gameInterval","setInterval","isShown","getComputedStyle","getPropertyValue","display","virusPosY","virusPosX","left","top","stopPropagation","clearInterval","setTimeout","location","reload","console","log","redZoneWidth","Number","replace"],"mappings":"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","file":"src.2abe1600.js","sourceRoot":"..\\src","sourcesContent":["export function getRandomNumber(min, max) {\r\n  return Math.floor(Math.random() * (max - min)) + min;\r\n}\r\n\r\nexport function createDomElement(tag, attrs, ...children) {\r\n  const element = document.createElement(tag);\r\n  for (const attr in attrs) {\r\n    element[attr] = attrs[attr];\r\n  }\r\n\r\n  if (children.length !== 0) {\r\n    children.forEach(child => {\r\n      element.appendChild(child);\r\n    });\r\n  }\r\n\r\n  return element;\r\n}\r\n","export const MAP_HEIGHT = 600;\r\nexport const MAP_WIDTH = 1000;\r\nexport const RED_ZONE_WIDTH_INTERVAL = 100;\r\n \r\n","import map from \"./assets/map.png\";\r\nimport \"./styles/index.css\";\r\nimport { getRandomNumber, createDomElement } from \"./utils\";\r\nimport { MAP_WIDTH, MAP_HEIGHT, RED_ZONE_WIDTH_INTERVAL } from './constants';\r\n\r\nlet VIRUSES_ELIMINATED = 0;\r\nlet VIRUSES_MISSED = 0;\r\n\r\nfunction initialize() {\r\n  render();\r\n}\r\n\r\nfunction render(){\r\n  const mapImage = createDomElement('img', { id: 'mapImage', src: map });\r\n  const virus = createDomElement('div', { id: 'virus' });\r\n  const redZone = createDomElement('div', { id: 'redZone' });\r\n  const score = createDomElement('div', { id: 'score', className: 'scoreElement', textContent: `Score: ${VIRUSES_ELIMINATED - VIRUSES_MISSED}`});\r\n  const virussesEliminated = createDomElement('div', { id: 'virussesEliminated', className: 'scoreElement', textContent: `Virusses Eliminated: ${VIRUSES_ELIMINATED}`});\r\n  const virussesMissed = createDomElement('div', { id: 'virussesMissed', className: 'scoreElement', textContent: `Viruses Missed: ${VIRUSES_MISSED}`});\r\n  const gameOver = createDomElement('div', {id: 'gameOver', className: 'result', textContent: 'GAME OVER' });\r\n  const youWonMessage = createDomElement('div', { id: 'youWonMessage', className: 'result', textContent: 'VIRUS DESTROYED!' });\r\n  const scoreWrapper = createDomElement('div', { id: 'scoreWrapper' }, score, virussesEliminated, virussesMissed);\r\n  const mapWrapper = createDomElement('div', { id: 'mapWrapper', style: {width: '1000px'} }, mapImage, gameOver, youWonMessage, redZone, virus);\r\n  const root = createDomElement('div', { id: 'root' }, mapWrapper, scoreWrapper)\r\n  document.body.appendChild(root)\r\n  redZone.style.width = '0px';\r\n  mapWrapper.style.width = `${MAP_WIDTH}px`;\r\n  mapWrapper.style.height = `${MAP_HEIGHT}px`;\r\n  const interval = displayVirus(virus);\r\n\r\n  virus.addEventListener(\"click\", (e) => virusClickHandler(e, virussesEliminated, score, youWonMessage, interval));\r\n  mapWrapper.addEventListener(\"click\", () => mapClickHandler(virussesMissed, gameOver, interval, redZone, mapWrapper));\r\n}\r\n\r\nfunction displayVirus(virus) {\r\n  const gameInterval = setInterval(() => {\r\n    const isShown = getComputedStyle(virus).getPropertyValue('display') === \"block\";\r\n\r\n    if (isShown) {\r\n      virus.style.display = \"none\";\r\n    } else {\r\n      virus.style.display = \"block\";\r\n      const virusPosY = getRandomNumber(0, MAP_HEIGHT - 50);\r\n      const virusPosX = getRandomNumber(0, MAP_WIDTH - 50);\r\n      virus.style.left = `${virusPosX}px`;\r\n      virus.style.top = `${virusPosY}px`;\r\n    }\r\n  }, 1000);\r\n  return gameInterval;\r\n}\r\n\r\nconst virusClickHandler = (e, virussesEliminated, score, youWonMessage, interval) => {\r\n  e.stopPropagation();\r\n  VIRUSES_ELIMINATED += 1;\r\n  virussesEliminated.textContent = `Virusses Eliminated: ${VIRUSES_ELIMINATED}`;\r\n  score.textContent = `Score: ${VIRUSES_ELIMINATED - VIRUSES_MISSED}`;\r\n\r\n  if (VIRUSES_ELIMINATED === 10){\r\n    youWonMessage.style.display = 'flex';\r\n    clearInterval(interval);\r\n    setTimeout(() => {\r\n      document.location.reload();\r\n    }, 3000);\r\n  }\r\n};\r\n\r\nconst mapClickHandler = (virussesMissed, gameOver, interval, redZone, mapWrapper) => {\r\n  console.log(mapWrapper)\r\n  VIRUSES_MISSED += 1;\r\n  let redZoneWidth = Number(getComputedStyle(redZone).getPropertyValue('width').replace('px', ''));\r\n  redZoneWidth += RED_ZONE_WIDTH_INTERVAL\r\n  redZone.style.width = `${redZoneWidth}px`;\r\n\r\n  virussesMissed.textContent = `Virusses Missed: ${VIRUSES_MISSED}`;\r\n  score.textContent = `Score: ${VIRUSES_ELIMINATED - VIRUSES_MISSED}`;\r\n  \r\n  if (VIRUSES_MISSED === 10){\r\n    gameOver.style.display = 'flex';\r\n    clearInterval(interval);\r\n    setTimeout(() => {\r\n      document.location.reload();\r\n    }, 3000);\r\n  }\r\n}\r\n\r\ninitialize();\r\n"]}